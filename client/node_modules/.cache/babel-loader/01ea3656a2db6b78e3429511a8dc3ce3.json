{"ast":null,"code":"var _jsxFileName = \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/ModalUpdateTech.js\";\nimport React from 'react';\nimport './addTechForm.css';\nimport { getTech, deleteTech, updateTech, addTech } from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\"; //     picture: \"https://zdnet2.cbsistatic.com/hub/i/r/2018/01/26/b4fe5bfc-6e3b-4575-b8db-f06caadc1a71/thumbnail/770x578/5f810055799b727df363a6e0cfcece38/tech-transport-future-intro.jpg\",\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalUpdateTech extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      }); //   this.setState({newTodo: e.target.value})\n    };\n\n    this.handleUpdate = (e, id, tech) => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            user_id = _this$state.user_id,\n            category = _this$state.category,\n            picture = _this$state.picture,\n            description = _this$state.description,\n            cost = _this$state.cost,\n            availability = _this$state.availability;\n      e.preventDefault();\n      this.props.updateTech(id, tech);\n    };\n\n    this.handleToggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      modal: false,\n      techItem: this.props.techItem\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          user_id = _this$state2.user_id,\n          category = _this$state2.category,\n          picture = _this$state2.picture,\n          description = _this$state2.description,\n          cost = _this$state2.cost,\n          availability = _this$state2.availability;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Update  \"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Modal Header Stuff\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: category,\n      name: \"category\",\n      type: \"text\",\n      placeholder: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: cost,\n      name: \"cost\",\n      type: \"text\",\n      placeholder: \"cost\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: picture,\n      name: \"picture\",\n      placeholder: \"picture\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: description,\n      name: \"description\",\n      wrap: \"hard\",\n      placeholder: \"description\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Do Something\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech\n}) => ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getTech,\n  deleteTech,\n  updateTech,\n  addTech\n})(ModalUpdateTech));","map":{"version":3,"sources":["/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/ModalUpdateTech.js"],"names":["React","getTech","deleteTech","updateTech","addTech","connect","withRouter","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalUpdateTech","Component","constructor","props","handleChange","e","preventDefault","setState","target","name","value","handleUpdate","id","tech","state","user_id","category","picture","description","cost","availability","handleToggle","modal","techItem","bind","render","toggle","mapStateToProps","techItems","fetchingData","deletingTech","updatingTech","addingTech"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAEA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,OAAzC,QAAuD,YAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAGA;;AAGA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;AAEA,MAAMC,eAAN,SAA8BZ,KAAK,CAACa,SAApC,CAA8C;AAE5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEjB,UAAMA,KAAN;;AAFiB,SAgBnBC,YAhBmB,GAgBJC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAC,SAACF,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAA3B,OAAd,EAFkB,CAGlB;AACD,KApBkB;;AAAA,SAuBnBC,YAvBmB,GAuBH,CAACN,CAAD,EAAIO,EAAJ,EAAQC,IAAR,KAAiB;AAAA,0BAEgD,KAAKC,KAFrD;AAAA,YAErBL,IAFqB,eAErBA,IAFqB;AAAA,YAEfM,OAFe,eAEfA,OAFe;AAAA,YAENC,QAFM,eAENA,QAFM;AAAA,YAEIC,OAFJ,eAEIA,OAFJ;AAAA,YAEaC,WAFb,eAEaA,WAFb;AAAA,YAE0BC,IAF1B,eAE0BA,IAF1B;AAAA,YAEgCC,YAFhC,eAEgCA,YAFhC;AAK/Bf,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWZ,UAAX,CAAsBqB,EAAtB,EAA0BC,IAA1B;AACD,KA9BkB;;AAAA,SAqCnBQ,YArCmB,GAqCJ,MAAM;AAEnB,WAAKd,QAAL,CAAe;AACbe,QAAAA,KAAK,EAAE,CAAC,KAAKR,KAAL,CAAWQ;AADN,OAAf;AAKD,KA5CkB;;AAGjB,SAAKR,KAAL,GAAa;AACXQ,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWoB;AAFV,KAAb;AAMA,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB,CAApB;AAED;;AAmCDC,EAAAA,MAAM,GAAG;AAAA,yBAEsE,KAAKX,KAF3E;AAAA,UAECL,IAFD,gBAECA,IAFD;AAAA,UAEOM,OAFP,gBAEOA,OAFP;AAAA,UAEgBC,QAFhB,gBAEgBA,QAFhB;AAAA,UAE0BC,OAF1B,gBAE0BA,OAF1B;AAAA,UAEmCC,WAFnC,gBAEmCA,WAFnC;AAAA,UAEgDC,IAFhD,gBAEgDA,IAFhD;AAAA,UAEsDC,YAFtD,gBAEsDA,YAFtD;AAIP,WAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAE,KAAKC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAI,KAAKD,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAEE,MAAA,QAAQ,EAAI,KAAKV,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAEE,MAAA,KAAK,EAAIF,IAFX;AAGE,MAAA,IAAI,EAAG,MAHT;AAIE,MAAA,IAAI,EAAG,MAJT;AAKE,MAAA,WAAW,EAAG,MALhB;AAME,MAAA,QAAQ,EAAE,KAAKL,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AACE,MAAA,KAAK,EAAIY,QADX;AAEE,MAAA,IAAI,EAAG,UAFT;AAGE,MAAA,IAAI,EAAG,MAHT;AAIE,MAAA,WAAW,EAAG,UAJhB;AAKE,MAAA,QAAQ,EAAE,KAAKZ,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE;AACE,MAAA,KAAK,EAAIe,IADX;AAEE,MAAA,IAAI,EAAG,MAFT;AAGE,MAAA,IAAI,EAAG,MAHT;AAIE,MAAA,WAAW,EAAG,MAJhB;AAKE,MAAA,QAAQ,EAAE,KAAKf,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CAFF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAIa,OADX;AAEE,MAAA,IAAI,EAAG,SAFT;AAGE,MAAA,WAAW,EAAG,SAHhB;AAIE,MAAA,QAAQ,EAAE,KAAKb,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AACE,MAAA,KAAK,EAAIc,WADX;AAEE,MAAA,IAAI,EAAG,aAFT;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAG,aAJhB;AAKE,MAAA,QAAQ,EAAE,KAAKd,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CArCF,CALF,CADF,CAJF,CAFF,EAqEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKsB,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EACsE,GADtE,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,KAAKA,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CArEF,CAJF,CALF;AAqFD;;AAzI2C;;AA4I9C,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA,YAA1B;AAAwCC,EAAAA,YAAxC;AAAsDC,EAAAA;AAAtD,CAAD,MAAwE;AAC9FJ,EAAAA,SAD8F;AAE9FC,EAAAA,YAF8F;AAG9FC,EAAAA,YAH8F;AAI9FC,EAAAA,YAJ8F;AAK9FC,EAAAA;AAL8F,CAAxE,CAAxB;;AAUA,eAAetC,UAAU,CACvBD,OAAO,CACLkC,eADK,EAEL;AAACtC,EAAAA,OAAD;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA;AAAlC,CAFK,CAAP,CAIEQ,eAJF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport './addTechForm.css';\n\nimport {getTech, deleteTech, updateTech, addTech} from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\n\n//     picture: \"https://zdnet2.cbsistatic.com/hub/i/r/2018/01/26/b4fe5bfc-6e3b-4575-b8db-f06caadc1a71/thumbnail/770x578/5f810055799b727df363a6e0cfcece38/tech-transport-future-intro.jpg\",\n\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalUpdateTech extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      modal: false,\n      techItem: this.props.techItem,\n\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n\n  }\n\n\n\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value})\n    //   this.setState({newTodo: e.target.value})\n  };\n\n\n  handleUpdate  = (e, id, tech) => {\n\n       const {name, user_id, category, picture, description, cost, availability} = this.state;\n\n\n    e.preventDefault();\n    this.props.updateTech(id, tech);\n  };\n\n\n\n\n\n\n  handleToggle = () => {\n\n    this.setState( {\n      modal: !this.state.modal,\n\n    });\n\n  };\n\n  render() {\n\n     const {name, user_id, category, picture, description, cost, availability} = this.state;\n\n    return (\n\n\n\n\n      <div>\n\n\n        <Button color=\"danger\" onClick={this.handleToggle}> Update  </Button>\n        <Modal isOpen={this.state.modal}>\n          <ModalHeader toggle = {this.handleToggle} > Modal Header Stuff</ModalHeader>\n          <ModalBody>\n\n\n\n            <div >\n              <form\n\n                onSubmit = {this.handleUpdate}\n              >\n\n                <div >\n\n                  <div >\n                    <input\n\n                      value = {name}\n                      name = \"name\"\n                      type = \"text\"\n                      placeholder = \"name\"\n                      onChange={this.handleChange}\n                    />\n                    <input\n                      value = {category}\n                      name = \"category\"\n                      type = \"text\"\n                      placeholder = \"category\"\n                      onChange={this.handleChange}\n                    />\n\n                    <input\n                      value = {cost}\n                      name = \"cost\"\n                      type = \"text\"\n                      placeholder = \"cost\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div >\n                    <textarea\n                      value = {picture}\n                      name = \"picture\"\n                      placeholder = \"picture\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                     <textarea\n                       value = {description}\n                       name = \"description\"\n                       wrap=\"hard\"\n                       placeholder = \"description\"\n                       onChange={this.handleChange}\n                     />\n                  </div>\n\n                </div>\n\n              </form>\n\n            </div>\n\n\n\n\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({techItems, fetchingData, deletingTech, updatingTech, addingTech}) => ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech,\n\n\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {getTech, deleteTech, updateTech, addTech}\n\n  )(ModalUpdateTech)\n\n);"]},"metadata":{},"sourceType":"module"}