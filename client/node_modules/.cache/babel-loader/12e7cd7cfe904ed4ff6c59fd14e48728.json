{"ast":null,"code":"import _objectSpread from \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/ModalUpdateTech.js\";\nimport React from 'react';\nimport './addTechForm.css';\nimport { getTech, deleteTech, updateTech, addTech } from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\"; //     picture: \"https://zdnet2.cbsistatic.com/hub/i/r/2018/01/26/b4fe5bfc-6e3b-4575-b8db-f06caadc1a71/thumbnail/770x578/5f810055799b727df363a6e0cfcece38/tech-transport-future-intro.jpg\",\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalUpdateTech extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      techItem: this.props.techItem,\n      gud_id: this.props.techItem.id\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        techItem: _objectSpread({}, this.state.techItem, {\n          // just added  TONIGHT\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.handleUpdate = (e, id) => {\n      const _this$state$techItem = this.state.techItem,\n            name = _this$state$techItem.name,\n            user_id = _this$state$techItem.user_id,\n            category = _this$state$techItem.category,\n            picture = _this$state$techItem.picture,\n            description = _this$state$techItem.description,\n            cost = _this$state$techItem.cost,\n            availability = _this$state$techItem.availability;\n      const itemUpdated = {\n        name: name,\n        category: category,\n        picture: picture,\n        description: description,\n        cost: cost,\n        availability: availability,\n        //        id: this.state.gud_id,\n        id: id,\n        user_id: user_id\n      };\n      e.preventDefault();\n      console.log('>>>>>  $$$$$$   itemUpdated', itemUpdated);\n      this.props.updateTech(this.props.techItem.id, itemUpdated); //    this.props.updateTech(this.state.gud_id, itemUpdated);\n\n      this.handleToggle();\n    };\n\n    this.handleToggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  render() {\n    const _this$state$techItem2 = this.state.techItem,\n          name = _this$state$techItem2.name,\n          id = _this$state$techItem2.id,\n          category = _this$state$techItem2.category,\n          picture = _this$state$techItem2.picture,\n          description = _this$state$techItem2.description,\n          cost = _this$state$techItem2.cost;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Update  \"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Update \", name), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" id: \", this.state.gud_id, \" \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" id prop: \", this.props.techItem.id, \"  \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      value: category,\n      name: \"category\",\n      type: \"text\",\n      placeholder: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: cost,\n      name: \"cost\",\n      type: \"text\",\n      placeholder: \"cost\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: picture,\n      name: \"picture\",\n      placeholder: \"picture\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: description,\n      name: \"description\",\n      wrap: \"hard\",\n      placeholder: \"description\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: e => this.handleUpdate(e, this.props.techItem.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" Update\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n} // <Button color=\"primary\" onClick={ (e) => this.handleUpdate(e, id\n\n\nconst mapStateToProps = ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech\n}) => ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getTech,\n  deleteTech,\n  updateTech,\n  addTech\n})(ModalUpdateTech));","map":{"version":3,"sources":["/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/ModalUpdateTech.js"],"names":["React","getTech","deleteTech","updateTech","addTech","connect","withRouter","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalUpdateTech","Component","state","modal","techItem","props","gud_id","id","handleChange","e","preventDefault","setState","target","name","value","handleUpdate","user_id","category","picture","description","cost","availability","itemUpdated","console","log","handleToggle","render","mapStateToProps","techItems","fetchingData","deletingTech","updatingTech","addingTech"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './addTechForm.css';\n\nimport {getTech, deleteTech, updateTech, addTech} from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\n\n//     picture: \"https://zdnet2.cbsistatic.com/hub/i/r/2018/01/26/b4fe5bfc-6e3b-4575-b8db-f06caadc1a71/thumbnail/770x578/5f810055799b727df363a6e0cfcece38/tech-transport-future-intro.jpg\",\n\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalUpdateTech extends React.Component {\n  state = {\n    modal: false,\n    techItem: this.props.techItem,\n    gud_id: this.props.techItem.id,\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({\n\n        techItem: {\n         ...this.state.techItem,       // just added  TONIGHT\n          [e.target.name]: e.target.value\n        }\n\n      })\n  };\n\n\n  handleUpdate  = (e, id) => {\n\n       const {name, user_id, category, picture, description, cost, availability} = this.state.techItem;\n\n       const itemUpdated = {\n         name: name,\n         category: category,\n         picture: picture,\n         description: description,\n         cost: cost,\n         availability: availability,\n //        id: this.state.gud_id,\n        id: id,\n         user_id: user_id,\n       };\n\n\n\n    e.preventDefault();\n\n    console.log('>>>>>  $$$$$$   itemUpdated', itemUpdated);\n\n    this.props.updateTech(this.props.techItem.id, itemUpdated);\n\n//    this.props.updateTech(this.state.gud_id, itemUpdated);\n    this.handleToggle();\n  };\n\n  handleToggle = () => {\n\n    this.setState( {\n      modal: !this.state.modal,\n\n    });\n\n  };\n\n  render() {\n\n    const {name, id, category, picture, description, cost} = this.state.techItem;\n\n    return (\n      <div>\n\n        <Button color=\"danger\" onClick={this.handleToggle}> Update  </Button>\n\n        <Modal isOpen={this.state.modal}>\n          <ModalHeader toggle = {this.handleToggle} > Update {name}</ModalHeader>\n          <ModalBody>\n\n            <div >\n              <form\n                onSubmit = {this.handleUpdate}\n              >\n\n                <div >\n\n                  <h4> id: {this.state.gud_id} </h4>\n                  <h4> id prop: {this.props.techItem.id}  </h4>\n\n                  <div >\n                    <label>Name:\n                    <input\n                      value = {name}\n                      name = \"name\"\n                      type = \"text\"\n                      placeholder = \"name\"\n                      onChange={this.handleChange}\n                    />\n                    </label>\n\n                    <input\n                      value = {category}\n                      name = \"category\"\n                      type = \"text\"\n                      placeholder = \"category\"\n                      onChange={this.handleChange}\n                    />\n\n                    <input\n                      value = {cost}\n                      name = \"cost\"\n                      type = \"text\"\n                      placeholder = \"cost\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div >\n                    <textarea\n                      value = {picture}\n                      name = \"picture\"\n                      placeholder = \"picture\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                     <textarea\n                       value = {description}\n                       name = \"description\"\n                       wrap=\"hard\"\n                       placeholder = \"description\"\n                       onChange={this.handleChange}\n                     />\n                  </div>\n\n                </div>\n              </form>\n            </div>\n\n          </ModalBody>\n\n\n\n          <ModalFooter>\n            <Button color=\"primary\" onClick={ (e) => this.handleUpdate(e, this.props.techItem.id)  }> Update</Button>{' '}\n            <Button color=\"secondary\" onClick={this.handleToggle}>Cancel</Button>\n          </ModalFooter>\n\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\n// <Button color=\"primary\" onClick={ (e) => this.handleUpdate(e, id\n\nconst mapStateToProps = ({techItems, fetchingData, deletingTech, updatingTech, addingTech}) => ({\n techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech,\n});\n\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {getTech, deleteTech, updateTech, addTech}\n  )(ModalUpdateTech)\n\n);\n"]},"metadata":{},"sourceType":"module"}