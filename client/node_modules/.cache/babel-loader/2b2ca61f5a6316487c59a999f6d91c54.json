{"ast":null,"code":"var _jsxFileName = \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/ModalUpdateTech.js\";\nimport React from 'react';\nimport './addTechForm.css';\nimport { getTech, deleteTech, updateTech, addTech } from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\"; //     picture: \"https://zdnet2.cbsistatic.com/hub/i/r/2018/01/26/b4fe5bfc-6e3b-4575-b8db-f06caadc1a71/thumbnail/770x578/5f810055799b727df363a6e0cfcece38/tech-transport-future-intro.jpg\",\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalUpdateTech extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      techItem: this.props.techItem,\n      gud_id: this.props.techItem.id\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        techItem: {\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleUpdate = (e, id) => {\n      const _this$state$techItem = this.state.techItem,\n            name = _this$state$techItem.name,\n            user_id = _this$state$techItem.user_id,\n            category = _this$state$techItem.category,\n            picture = _this$state$techItem.picture,\n            description = _this$state$techItem.description,\n            cost = _this$state$techItem.cost,\n            availability = _this$state$techItem.availability;\n      const new_id = Number(id);\n      const itemUpdated = {\n        //     name: this.state.techItem.name,\n        name: name,\n        category: category,\n        picture: picture,\n        description: description,\n        cost: cost,\n        availability: availability,\n        id: new_id,\n        user_id: user_id\n      };\n      e.preventDefault();\n      console.log('>>>>>  $$$$$$   itemUpdated', itemUpdated);\n      this.props.updateTech(new_id, itemUpdated);\n    };\n\n    this.handleToggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  render() {\n    const _this$state$techItem2 = this.state.techItem,\n          name = _this$state$techItem2.name,\n          id = _this$state$techItem2.id,\n          category = _this$state$techItem2.category,\n          picture = _this$state$techItem2.picture,\n          description = _this$state$techItem2.description,\n          cost = _this$state$techItem2.cost,\n          availability = _this$state$techItem2.availability;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" Update  \"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" Modal Header Stuff\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" id: \", this.state.gud_id, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: category,\n      name: \"category\",\n      type: \"text\",\n      placeholder: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: cost,\n      name: \"cost\",\n      type: \"text\",\n      placeholder: \"cost\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: picture,\n      name: \"picture\",\n      placeholder: \"picture\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: description,\n      name: \"description\",\n      wrap: \"hard\",\n      placeholder: \"description\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: e => this.handleUpdate(e, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \" Update\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech\n}) => ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getTech,\n  deleteTech,\n  updateTech,\n  addTech\n})(ModalUpdateTech));","map":{"version":3,"sources":["/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/ModalUpdateTech.js"],"names":["React","getTech","deleteTech","updateTech","addTech","connect","withRouter","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalUpdateTech","Component","state","modal","techItem","props","gud_id","id","handleChange","e","preventDefault","setState","target","name","value","handleUpdate","user_id","category","picture","description","cost","availability","new_id","Number","itemUpdated","console","log","handleToggle","render","toggle","mapStateToProps","techItems","fetchingData","deletingTech","updatingTech","addingTech"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './addTechForm.css';\n\nimport {getTech, deleteTech, updateTech, addTech} from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\n\n//     picture: \"https://zdnet2.cbsistatic.com/hub/i/r/2018/01/26/b4fe5bfc-6e3b-4575-b8db-f06caadc1a71/thumbnail/770x578/5f810055799b727df363a6e0cfcece38/tech-transport-future-intro.jpg\",\n\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass ModalUpdateTech extends React.Component {\n\n  /*\n  constructor(props) {\n\n    console.log(\">>>>>  modal props !!!\", props);\n    super(props);\n    this.state = {\n      modal: false,\n      techItem: this.props.techItem.techItem,\n\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n\n  }\n\n*/\n\n  state = {\n    modal: false,\n    techItem: this.props.techItem,\n    gud_id: this.props.techItem.id,\n  };\n\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({\n\n        techItem: {\n          [e.target.name]: e.target.value\n        }\n\n      })\n  };\n\n\n  handleUpdate  = (e, id) => {\n\n       const {name, user_id, category, picture, description, cost, availability} = this.state.techItem;\n\n       const new_id = Number(id);\n\n       const itemUpdated = {\n    //     name: this.state.techItem.name,\n\n         name: name,\n         category: category,\n         picture: picture,\n         description: description,\n         cost: cost,\n         availability: availability,\n         id: new_id,\n         user_id: user_id,\n\n       };\n\n\n\n    e.preventDefault();\n\n    console.log('>>>>>  $$$$$$   itemUpdated', itemUpdated);\n\n    this.props.updateTech(new_id, itemUpdated);\n  };\n\n\n\n\n\n\n  handleToggle = () => {\n\n    this.setState( {\n      modal: !this.state.modal,\n\n    });\n\n  };\n\n  render() {\n\n     const {name, id, category, picture, description, cost, availability} = this.state.techItem;\n\n    return (\n\n\n\n\n      <div>\n\n\n        <Button color=\"danger\" onClick={this.handleToggle}> Update  </Button>\n        <Modal isOpen={this.state.modal}>\n          <ModalHeader toggle = {this.handleToggle} > Modal Header Stuff</ModalHeader>\n          <ModalBody>\n\n\n\n            <div >\n              <form\n\n                onSubmit = {this.handleUpdate}\n              >\n\n                <div >\n\n                  <h4> id: {this.state.gud_id} </h4>\n\n                  <div >\n                    <input\n\n                      value = {name}\n                      name = \"name\"\n                      type = \"text\"\n                      placeholder = \"name\"\n                      onChange={this.handleChange}\n                    />\n                    <input\n                      value = {category}\n                      name = \"category\"\n                      type = \"text\"\n                      placeholder = \"category\"\n                      onChange={this.handleChange}\n                    />\n\n                    <input\n                      value = {cost}\n                      name = \"cost\"\n                      type = \"text\"\n                      placeholder = \"cost\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div >\n                    <textarea\n                      value = {picture}\n                      name = \"picture\"\n                      placeholder = \"picture\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                     <textarea\n                       value = {description}\n                       name = \"description\"\n                       wrap=\"hard\"\n                       placeholder = \"description\"\n                       onChange={this.handleChange}\n                     />\n                  </div>\n\n                </div>\n\n              </form>\n\n            </div>\n\n\n\n\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={ (e) => this.handleUpdate(e, id)  }> Update</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({techItems, fetchingData, deletingTech, updatingTech, addingTech}) => ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n  addingTech,\n\n\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {getTech, deleteTech, updateTech, addTech}\n\n  )(ModalUpdateTech)\n\n);"]},"metadata":{},"sourceType":"module"}