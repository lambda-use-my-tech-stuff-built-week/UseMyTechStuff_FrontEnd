{"ast":null,"code":"var _jsxFileName = \"/Users/mhuh01/Documents/git/UseMyTechStuff_FrontEnd/client/src/components/TechItemList.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Loader from 'react-loader-spinner';\nimport { getTech } from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { FaBeer } from 'react-icons/fa';\n\nclass TechItemlist extends Component {\n  /*\n    toggleChange = () => {\n      console.log(\"isChecked is \", this.isChecked);\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n   */\n  componentDidMount() {\n    this.props.getTech();\n  } // handlers\n  // <button className = \"renterButton\" > Rent Item </button>\n\n\n  render() {\n    console.log(\"HEY\");\n    return React.createElement(\"div\", {\n      style: {\n        border: \"5px solid blue\",\n        width: \"75%\",\n        backgroundColor: \"ivory\",\n        margin: \"0 auto\",\n        color: \"black\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\",\n        padding: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.techItems.fetchingData ? React.createElement(Loader, {\n      className: \"section\",\n      type: \"Rings\",\n      color: \"deeppink\",\n      height: \"260\",\n      width: \"280\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : React.createElement(\"h3\", {\n      style: {\n        width: \"75%\",\n        border: \"1px solid green\",\n        fontSize: \"40px\",\n        margin: \"5px auto\",\n        color: \"black\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" TechItems for Rent !\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \"), this.props.techItems.techItems.map((techItem, id) => React.createElement(\"div\", {\n      key: id,\n      style: {\n        border: \"1px solid red\",\n        margin: \"2px\",\n        width: \"30%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, Number(localStorage.getItem('user_id')) === techItem.user_id ? React.createElement(\"button\", {\n      className: \"ownerButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Delete Item \") : techItem.availability ? React.createElement(\"h3\", {\n      className: \"borderFormat avail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Available \") : React.createElement(\"h3\", {\n      className: \"borderFormat rented\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" Rented \"), Number(localStorage.getItem('user_id')) !== techItem.user_id ? React.createElement(\"button\", {\n      className: \"renterButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" Rent Item \") : null, Number(localStorage.getItem('user_id')) === techItem.user_id ? React.createElement(\"button\", {\n      className: \"ownerButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Update Item \") : null), React.createElement(\"div\", {\n      className: \"img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img_item\",\n      src: techItem.picture,\n      alt: \"alt-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" Owner: \", techItem.user, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"ID: \", techItem.user_id), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" \", techItem.name, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Category: \", techItem.category, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Cost: $\", techItem.cost, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" Availability: \", techItem.availability.toString(), \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      style: {\n        fontSize: \"12px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"  Description: \", techItem.description, \" \"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  techItems,\n  fetchingData\n}) => ({\n  techItems,\n  fetchingData\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getTech\n})(TechItemlist));","map":{"version":3,"sources":["/Users/mhuh01/Documents/git/UseMyTechStuff_FrontEnd/client/src/components/TechItemList.js"],"names":["React","Component","Loader","getTech","connect","withRouter","FaBeer","TechItemlist","componentDidMount","props","render","console","log","border","width","backgroundColor","margin","color","display","flexWrap","justifyContent","padding","techItems","fetchingData","fontSize","map","techItem","id","Number","localStorage","getItem","user_id","availability","picture","user","name","category","cost","toString","description","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAGnC;;;;;;;;AAUAO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWN,OAAX;AACD,GAfkC,CAiBnC;AAGF;;;AAEEO,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEA,WACE;AACE,MAAA,KAAK,EAAK;AACRC,QAAAA,MAAM,EAAE,gBADA;AAERC,QAAAA,KAAK,EAAE,KAFC;AAGRC,QAAAA,eAAe,EAAE,OAHT;AAIRC,QAAAA,MAAM,EAAE,QAJA;AAKRC,QAAAA,KAAK,EAAE,OALC;AAMRC,QAAAA,OAAO,EAAE,MAND;AAORC,QAAAA,QAAQ,EAAE,MAPF;AAQRC,QAAAA,cAAc,EAAE,cARR;AASRC,QAAAA,OAAO,EAAE;AATD,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG,KAAKZ,KAAL,CAAWa,SAAX,CAAqBC,YAArB,GACC,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,SAApB;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAA2C,MAAA,KAAK,EAAC,UAAjD;AAA4D,MAAA,MAAM,EAAC,KAAnE;AAAyE,MAAA,KAAK,EAAC,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AACE,MAAA,KAAK,EAAK;AACRT,QAAAA,KAAK,EAAE,KADC;AAERD,QAAAA,MAAM,EAAE,iBAFA;AAGRW,QAAAA,QAAQ,EAAE,MAHF;AAIRR,QAAAA,MAAM,EAAE,UAJA;AAKRC,QAAAA,KAAK,EAAE,OALC;AAMRC,QAAAA,OAAO,EAAE,MAND;AAORE,QAAAA,cAAc,EAAE;AAPR,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAjBJ,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA/BF,EAiCG,KAAKX,KAAL,CAAWa,SAAX,CAAqBA,SAArB,CAA+BG,GAA/B,CAAoC,CAACC,QAAD,EAAWC,EAAX,KACnC;AAAK,MAAA,GAAG,EAAIA,EAAZ;AACK,MAAA,KAAK,EAAK;AACRd,QAAAA,MAAM,EAAE,eADA;AAERG,QAAAA,MAAM,EAAE,KAFA;AAGRF,QAAAA,KAAK,EAAE;AAHC,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAN,KAA4CJ,QAAQ,CAACK,OAArD,GACG;AAAQ,MAAA,SAAS,EAAG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,GAGGL,QAAQ,CAACM,YAAT,GACE;AAAI,MAAA,SAAS,EAAG,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,GAEE;AAAI,MAAA,SAAS,EAAG,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANR,EAUGJ,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAN,KAA4CJ,QAAQ,CAACK,OAArD,GACG;AAAQ,MAAA,SAAS,EAAG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,GAEG,IAZN,EAgBGH,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAN,KAA4CJ,QAAQ,CAACK,OAArD,GACG;AAAQ,MAAA,SAAS,EAAG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,GAEG,IAlBN,CAPF,EA+BE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,UAAjB;AACK,MAAA,GAAG,EAAKL,QAAQ,CAACO,OADtB;AAC+B,MAAA,GAAG,EAAG,SADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/BF,EAsCE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwCP,QAAQ,CAACQ,IAAjD,MAtCF,EAuCE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqCR,QAAQ,CAACK,OAA9C,CAvCF,EAwCE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmCL,QAAQ,CAACS,IAA5C,MAxCF,EAyCE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4CT,QAAQ,CAACU,QAArD,MAzCF,EA2CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwCV,QAAQ,CAACW,IAAjD,MA3CF,EA4CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA+CX,QAAQ,CAACM,YAAT,CAAsBM,QAAtB,EAA/C,MA5CF,EA6CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAA+B,MAAA,KAAK,EAAI;AAACd,QAAAA,QAAQ,EAAE;AAAX,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4EE,QAAQ,CAACa,WAArF,MA7CF,CADD,CAjCH,CADF;AA8FD;;AAxHkC;;AA4HrC,MAAMC,eAAe,GAAG,CAAC;AAAClB,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,MAAgC;AACtDD,EAAAA,SADsD;AAEtDC,EAAAA;AAFsD,CAAhC,CAAxB;;AAQA,eAAelB,UAAU,CACvBD,OAAO,CACLoC,eADK,EAEL;AAACrC,EAAAA;AAAD,CAFK,CAAP,CAIEI,YAJF,CADuB,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Loader from 'react-loader-spinner';\n\nimport {getTech} from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { FaBeer } from 'react-icons/fa';\n\nclass TechItemlist extends Component {\n\n\n  /*\n    toggleChange = () => {\n      console.log(\"isChecked is \", this.isChecked);\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n\n  */\n\n  componentDidMount() {\n    this.props.getTech();\n  }\n\n  // handlers\n\n\n// <button className = \"renterButton\" > Rent Item </button>\n\n  render() {\n\n    console.log(\"HEY\");\n\n    return (\n      <div\n        style = { {\n          border: \"5px solid blue\",\n          width: \"75%\",\n          backgroundColor: \"ivory\",\n          margin: \"0 auto\",\n          color: \"black\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n          padding: \"50px\",\n        } }\n      >\n\n        {this.props.techItems.fetchingData?\n          <Loader className = \"section\" type=\"Rings\" color=\"deeppink\" height=\"260\" width=\"280\" />\n          :\n          <h3\n            style = { {\n              width: \"75%\",\n              border: \"1px solid green\",\n              fontSize: \"40px\",\n              margin: \"5px auto\",\n              color: \"black\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            } }\n          > TechItems for Rent !</h3>\n        }\n\n\n        <h2> </h2>\n\n        {this.props.techItems.techItems.map( (techItem, id ) => (\n          <div key = {id}\n               style =  {{\n                 border: \"1px solid red\",\n                 margin: \"2px\",\n                 width: \"30%\",\n               }}     >\n\n            <div className = \"buttons-container\">\n              {Number(localStorage.getItem('user_id')) === techItem.user_id\n                ? <button className = \"ownerButton\"> Delete Item </button>\n\n                : techItem.availability\n                  ? <h3 className = \"borderFormat avail\"> Available </h3>\n                  : <h3 className = \"borderFormat rented\"> Rented </h3>\n              }\n\n\n              {Number(localStorage.getItem('user_id')) !== techItem.user_id\n                ? <button className = \"renterButton\" > Rent Item </button>\n                : null\n              }\n\n\n              {Number(localStorage.getItem('user_id')) === techItem.user_id\n                ? <button className = \"ownerButton\"> Update Item </button>\n                : null\n              }\n            </div>\n\n\n\n            <div className = \"img-container\">\n              <img className = \"img_item\"\n                   src =  {techItem.picture} alt = \"alt-img\"\n              />\n            </div>\n\n\n            <h3 className = \"borderFormat\"> Owner: {techItem.user} </h3>\n            <h4 className = \"borderFormat\" >ID: {techItem.user_id}</h4>\n            <h4 className = \"borderFormat\"  > {techItem.name} </h4>\n            <h4 className = \"borderFormat\" > Category: {techItem.category} </h4>\n\n            <h4 className = \"borderFormat\"> Cost: ${techItem.cost} </h4>\n            <h4 className = \"borderFormat\"> Availability: {techItem.availability.toString()} </h4>\n            <h4 className = \"borderFormat\" style = {{fontSize: \"12px\"}}>  Description: {techItem.description} </h4>\n\n\n          </div>\n        ))}\n\n\n\n\n\n\n      </div>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = ({techItems, fetchingData}) => ({\n  techItems,\n  fetchingData,\n\n\n\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {getTech}\n\n  )(TechItemlist)\n\n);"]},"metadata":{},"sourceType":"module"}