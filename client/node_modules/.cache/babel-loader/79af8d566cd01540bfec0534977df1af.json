{"ast":null,"code":"var _jsxFileName = \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/TechItemList.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Loader from 'react-loader-spinner';\nimport { getTech } from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\"; // import { FaBeer } from 'react-icons/fa';\n\nclass TechItemlist extends Component {\n  /*\n    toggleChange = () => {\n      console.log(\"isChecked is \", this.isChecked);\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n  \n  */\n  componentDidMount() {\n    this.props.getTech();\n  } // handlers\n  // <button className = \"renterButton\" > Rent Item </button>\n\n\n  render() {\n    console.log(\"HEY\");\n    return React.createElement(\"div\", {\n      style: {\n        border: \"5px solid blue\",\n        width: \"75%\",\n        backgroundColor: \"ivory\",\n        margin: \"0 auto\",\n        color: \"black\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\",\n        padding: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.techItems.fetchingData ? React.createElement(Loader, {\n      className: \"section\",\n      type: \"Rings\",\n      color: \"deeppink\",\n      height: \"360\",\n      width: \"380\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : React.createElement(\"h3\", {\n      style: {\n        width: \"75%\",\n        border: \"1px solid green\",\n        fontSize: \"40px\",\n        margin: \"5px auto\",\n        color: \"black\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" TechItems for Rent !\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \"), this.props.techItems.techItems.map((techItem, id) => React.createElement(\"div\", {\n      key: id,\n      style: {\n        border: \"1px solid red\",\n        margin: \"2px\",\n        width: \"30%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, Number(localStorage.getItem('user_id')) === techItem.user_id ? React.createElement(\"button\", {\n      className: \"ownerButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Delete Item \") : techItem.availability ? React.createElement(\"h3\", {\n      className: \"borderFormat avail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Available \") : React.createElement(\"h3\", {\n      className: \"borderFormat rented\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" Rented \"), Number(localStorage.getItem('user_id')) !== techItem.user_id ? React.createElement(\"button\", {\n      className: \"renterButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" Rent Item \") : null, Number(localStorage.getItem('user_id')) === techItem.user_id ? React.createElement(\"button\", {\n      className: \"ownerButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Update Item \") : null), React.createElement(\"div\", {\n      className: \"img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img_item\",\n      src: techItem.picture,\n      alt: \"alt-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" Owner: \", techItem.user, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"ID: \", techItem.user_id), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", techItem.name, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Category: \", techItem.category, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" Cost: $\", techItem.cost, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" Availability: \", techItem.availability.toString(), \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      style: {\n        fontSize: \"12px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"  Description: \", techItem.description, \" \"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  techItems,\n  fetchingData\n}) => ({\n  techItems,\n  fetchingData\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getTech\n})(TechItemlist));","map":{"version":3,"sources":["/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/TechItemList.js"],"names":["React","Component","Loader","getTech","connect","withRouter","TechItemlist","componentDidMount","props","render","console","log","border","width","backgroundColor","margin","color","display","flexWrap","justifyContent","padding","techItems","fetchingData","fontSize","map","techItem","id","Number","localStorage","getItem","user_id","availability","picture","user","name","category","cost","toString","description","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Loader from 'react-loader-spinner';\n\nimport { getTech } from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n// import { FaBeer } from 'react-icons/fa';\n\nclass TechItemlist extends Component {\n\n\n  /*\n    toggleChange = () => {\n      console.log(\"isChecked is \", this.isChecked);\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n  \n  */\n\n  componentDidMount() {\n    this.props.getTech();\n  }\n\n  // handlers\n\n\n  // <button className = \"renterButton\" > Rent Item </button>\n\n  render() {\n\n    console.log(\"HEY\");\n\n    return (\n      <div\n        style={{\n          border: \"5px solid blue\",\n          width: \"75%\",\n          backgroundColor: \"ivory\",\n          margin: \"0 auto\",\n          color: \"black\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n          padding: \"50px\",\n        }}\n      >\n\n        {this.props.techItems.fetchingData ?\n          <Loader className=\"section\" type=\"Rings\" color=\"deeppink\" height=\"360\" width=\"380\" />\n          :\n          <h3\n            style={{\n              width: \"75%\",\n              border: \"1px solid green\",\n              fontSize: \"40px\",\n              margin: \"5px auto\",\n              color: \"black\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          > TechItems for Rent !</h3>\n        }\n\n\n        <h2> </h2>\n\n        {this.props.techItems.techItems.map((techItem, id) => (\n          <div key={id}\n            style={{\n              border: \"1px solid red\",\n              margin: \"2px\",\n              width: \"30%\",\n            }}     >\n\n            <div className=\"buttons-container\">\n              {Number(localStorage.getItem('user_id')) === techItem.user_id\n                ? <button className=\"ownerButton\"> Delete Item </button>\n\n                : techItem.availability\n                  ? <h3 className=\"borderFormat avail\"> Available </h3>\n                  : <h3 className=\"borderFormat rented\"> Rented </h3>\n              }\n\n\n              {Number(localStorage.getItem('user_id')) !== techItem.user_id\n                ? <button className=\"renterButton\" > Rent Item </button>\n                : null\n              }\n\n\n              {Number(localStorage.getItem('user_id')) === techItem.user_id\n                ? <button className=\"ownerButton\"> Update Item </button>\n                : null\n              }\n            </div>\n\n\n\n\n            <div className = \"img-container\">\n              <img className = \"img_item\"\n                src =  {techItem.picture} alt = \"alt-img\"\n\n              />\n            </div>\n\n\n            <h3 className=\"borderFormat\"> Owner: {techItem.user} </h3>\n            <h4 className=\"borderFormat\" >ID: {techItem.user_id}</h4>\n            <h4 className=\"borderFormat\"  > {techItem.name} </h4>\n            <h4 className=\"borderFormat\" > Category: {techItem.category} </h4>\n\n            <h4 className=\"borderFormat\"> Cost: ${techItem.cost} </h4>\n            <h4 className=\"borderFormat\"> Availability: {techItem.availability.toString()} </h4>\n            <h4 className=\"borderFormat\" style={{ fontSize: \"12px\" }}>  Description: {techItem.description} </h4>\n\n\n          </div>\n        ))}\n\n\n\n\n\n\n      </div>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = ({ techItems, fetchingData }) => ({\n  techItems,\n  fetchingData,\n\n\n\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getTech }\n\n  )(TechItemlist)\n\n);\n"]},"metadata":{},"sourceType":"module"}