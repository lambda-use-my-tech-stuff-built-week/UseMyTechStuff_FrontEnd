{"ast":null,"code":"var _jsxFileName = \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/TechItemList.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Loader from 'react-loader-spinner';\nimport { getTech, deleteTech, updateTech } from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\"; // import { FaBeer } from 'react-icons/fa';\n\nimport AddTechForm from './AddTechForm';\nimport axios from \"axios\";\n;\n\nclass TechItemlist extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDelete = (e, id) => {\n      console.log(\">>>>>>>>>>>>>>>>>>> deleting\");\n      e.preventDefault();\n      this.props.deleteTech(id);\n    };\n\n    this.handleUpdate = (e, id, tech) => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            user_id = _this$state.user_id,\n            category = _this$state.category,\n            picture = _this$state.picture,\n            description = _this$state.description,\n            cost = _this$state.cost,\n            availability = _this$state.availability;\n      e.preventDefault();\n      this.props.updateTech(id, tech);\n    };\n  }\n\n  /*\n    toggleChange = () => {\n      console.log(\"isChecked is \", this.isChecked);\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n   */\n  componentDidMount() {\n    this.props.getTech();\n  } // handlers\n\n\n  // <button className = \"renterButton\" > Rent Item </button>\n  render() {\n    console.log(\"HEY\");\n    return React.createElement(\"div\", {\n      style: {\n        border: \"5px solid blue\",\n        width: \"75%\",\n        backgroundColor: \"ivory\",\n        margin: \"0 auto\",\n        color: \"black\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\",\n        padding: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(AddTechForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.props.techItems.fetchingData ? React.createElement(Loader, {\n      className: \"section\",\n      type: \"Rings\",\n      color: \"deeppink\",\n      height: \"260\",\n      width: \"280\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : React.createElement(\"h3\", {\n      className: \"techTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" TechItems for Rent !\"), this.props.techItems.techItems.map((techItem, id) => React.createElement(\"div\", {\n      key: id,\n      style: {\n        border: \"1px solid red\",\n        margin: \"2px\",\n        width: \"30%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, Number(localStorage.getItem('user_id')) === techItem.user_id ? React.createElement(\"button\", {\n      onClick: e => this.handleDelete(e, techItem.id),\n      className: \"ownerButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" Delete Item \") : techItem.availability ? React.createElement(\"h3\", {\n      className: \"borderFormat avail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" Available \") : React.createElement(\"h3\", {\n      className: \"borderFormat rented\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Rented \"), Number(localStorage.getItem('user_id')) !== techItem.user_id ? React.createElement(\"button\", {\n      className: \"renterButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Rent Item \") : null, Number(localStorage.getItem('user_id')) === techItem.user_id ? React.createElement(\"button\", {\n      onClick: e => this.handleUpdate(techItem.id, techItem),\n      className: \"ownerButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Update Item \") : null), React.createElement(\"div\", {\n      className: \"img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img_item\",\n      src: techItem.picture,\n      alt: \"alt-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" Owner: \", techItem.user, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"ID: \", techItem.user_id), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" \", techItem.name, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" Category: \", techItem.category, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \" Cost: $\", techItem.cost, \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \" Availability: \", techItem.availability.toString(), \" \"), React.createElement(\"h4\", {\n      className: \"borderFormat\",\n      style: {\n        fontSize: \"12px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"  Description: \", techItem.description, \" \"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech\n}) => ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getTech,\n  deleteTech,\n  updateTech\n})(TechItemlist));","map":{"version":3,"sources":["/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/components/TechItemList.js"],"names":["React","Component","Loader","getTech","deleteTech","updateTech","connect","withRouter","AddTechForm","axios","TechItemlist","handleDelete","e","id","console","log","preventDefault","props","handleUpdate","tech","state","name","user_id","category","picture","description","cost","availability","componentDidMount","render","border","width","backgroundColor","margin","color","display","flexWrap","justifyContent","padding","techItems","fetchingData","map","techItem","Number","localStorage","getItem","user","toString","fontSize","mapStateToProps","deletingTech","updatingTech"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,UAA7B,QAA8C,YAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;AACA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAoBnCU,YApBmC,GAoBpB,CAACC,CAAD,EAAIC,EAAJ,KAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAH,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKC,KAAL,CAAWb,UAAX,CAAsBS,EAAtB;AACD,KAxBkC;;AAAA,SA+CnCK,YA/CmC,GA+CnB,CAACN,CAAD,EAAIC,EAAJ,EAAQM,IAAR,KAAiB;AAAA,0BAE6C,KAAKC,KAFlD;AAAA,YAExBC,IAFwB,eAExBA,IAFwB;AAAA,YAElBC,OAFkB,eAElBA,OAFkB;AAAA,YAETC,QAFS,eAETA,QAFS;AAAA,YAECC,OAFD,eAECA,OAFD;AAAA,YAEUC,WAFV,eAEUA,WAFV;AAAA,YAEuBC,IAFvB,eAEuBA,IAFvB;AAAA,YAE6BC,YAF7B,eAE6BA,YAF7B;AAK/Bf,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKC,KAAL,CAAWZ,UAAX,CAAsBQ,EAAtB,EAA0BM,IAA1B;AACD,KAtDkC;AAAA;;AAGnC;;;;;;;;AAUAS,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,KAAL,CAAWd,OAAX;AACD,GAfkC,CAiBnC;;;AAyCF;AAEE0B,EAAAA,MAAM,GAAG;AAEPf,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEA,WACE;AACE,MAAA,KAAK,EAAK;AACRe,QAAAA,MAAM,EAAE,gBADA;AAERC,QAAAA,KAAK,EAAE,KAFC;AAGRC,QAAAA,eAAe,EAAE,OAHT;AAIRC,QAAAA,MAAM,EAAE,QAJA;AAKRC,QAAAA,KAAK,EAAE,OALC;AAMRC,QAAAA,OAAO,EAAE,MAND;AAORC,QAAAA,QAAQ,EAAE,MAPF;AAQRC,QAAAA,cAAc,EAAE,cARR;AASRC,QAAAA,OAAO,EAAE;AATD,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAoBG,KAAKrB,KAAL,CAAWsB,SAAX,CAAqBC,YAArB,GACC,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,SAApB;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAA2C,MAAA,KAAK,EAAC,UAAjD;AAA4D,MAAA,MAAM,EAAC,KAAnE;AAAyE,MAAA,KAAK,EAAC,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AAAI,MAAA,SAAS,EAAG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAvBJ,EA0BG,KAAKvB,KAAL,CAAWsB,SAAX,CAAqBA,SAArB,CAA+BE,GAA/B,CAAoC,CAACC,QAAD,EAAW7B,EAAX,KACnC;AAAK,MAAA,GAAG,EAAIA,EAAZ;AACK,MAAA,KAAK,EAAK;AACRiB,QAAAA,MAAM,EAAE,eADA;AAERG,QAAAA,MAAM,EAAE,KAFA;AAGRF,QAAAA,KAAK,EAAE;AAHC,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAN,KAA4CH,QAAQ,CAACpB,OAArD,GACG;AACA,MAAA,OAAO,EAAOV,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB8B,QAAQ,CAAC7B,EAA9B,CADpB;AAEA,MAAA,SAAS,EAAG,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,GAKG6B,QAAQ,CAACf,YAAT,GACE;AAAI,MAAA,SAAS,EAAG,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,GAEE;AAAI,MAAA,SAAS,EAAG,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARR,EAYGgB,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAN,KAA4CH,QAAQ,CAACpB,OAArD,GACG;AAAQ,MAAA,SAAS,EAAG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,GAEG,IAdN,EAkBGqB,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,CAAN,KAA4CH,QAAQ,CAACpB,OAArD,GACG;AACA,MAAA,OAAO,EAAMV,CAAD,IAAO,KAAKM,YAAL,CAAkBwB,QAAQ,CAAC7B,EAA3B,EAA+B6B,QAA/B,CADnB;AAEA,MAAA,SAAS,EAAG,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,GAIG,IAtBN,CAPF,EAmCE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,UAAjB;AACK,MAAA,GAAG,EAAKA,QAAQ,CAAClB,OADtB;AAC+B,MAAA,GAAG,EAAG,SADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAnCF,EA0CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwCkB,QAAQ,CAACI,IAAjD,MA1CF,EA2CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqCJ,QAAQ,CAACpB,OAA9C,CA3CF,EA4CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmCoB,QAAQ,CAACrB,IAA5C,MA5CF,EA6CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4CqB,QAAQ,CAACnB,QAArD,MA7CF,EA+CE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwCmB,QAAQ,CAAChB,IAAjD,MA/CF,EAgDE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA+CgB,QAAQ,CAACf,YAAT,CAAsBoB,QAAtB,EAA/C,MAhDF,EAiDE;AAAI,MAAA,SAAS,EAAG,cAAhB;AAA+B,MAAA,KAAK,EAAI;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4EN,QAAQ,CAACjB,WAArF,MAjDF,CADD,CA1BH,CADF;AA2FD;;AA3JkC;;AA+JrC,MAAMwB,eAAe,GAAG,CAAC;AAACV,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAA0BU,EAAAA,YAA1B;AAAwCC,EAAAA;AAAxC,CAAD,MAA4D;AAClFZ,EAAAA,SADkF;AAElFC,EAAAA,YAFkF;AAGlFU,EAAAA,YAHkF;AAIlFC,EAAAA;AAJkF,CAA5D,CAAxB;;AASA,eAAe5C,UAAU,CACvBD,OAAO,CACL2C,eADK,EAEL;AAAC9C,EAAAA,OAAD;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA;AAAtB,CAFK,CAAP,CAIEK,YAJF,CADuB,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Loader from 'react-loader-spinner';\n\nimport {getTech, deleteTech, updateTech} from '../actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n// import { FaBeer } from 'react-icons/fa';\nimport AddTechForm from './AddTechForm';\nimport axios from \"axios\";\n;\nclass TechItemlist extends Component {\n\n\n  /*\n    toggleChange = () => {\n      console.log(\"isChecked is \", this.isChecked);\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n\n  */\n\n  componentDidMount() {\n    this.props.getTech();\n  }\n\n  // handlers\n\n\n  handleDelete = (e, id) => {\n    console.log(\">>>>>>>>>>>>>>>>>>> deleting\");\n    e.preventDefault();\n    this.props.deleteTech(id);\n  };\n\n\n/*\n  handleDelete = (e, id) => {\n    axios\n      .delete(`https://usemytechstuff.herokuapp.com/api/tech/${id}`,\n        {headers: { Authorization: localStorage.getItem(\"token\") }\n        })\n      .then(res => {\n        console.log(res);\n   //     dispatch({\n   //       type: DELETE_TECH,\n   //       payload: res.data\n   //     });\n      })\n      .catch(err =>  { console.log(\">>>>>>>  ERROR  delete\");               // err\n   //     dispatch({type: ERROR, payload: err.response});\n      })\n  };\n*/\n\n\n  handleUpdate  = (e, id, tech) => {\n\n    const {name, user_id, category, picture, description, cost, availability} = this.state;\n\n\n    e.preventDefault();\n    this.props.updateTech(id, tech);\n  };\n\n\n\n// <button className = \"renterButton\" > Rent Item </button>\n\n  render() {\n\n    console.log(\"HEY\");\n\n    return (\n      <div\n        style = { {\n          border: \"5px solid blue\",\n          width: \"75%\",\n          backgroundColor: \"ivory\",\n          margin: \"0 auto\",\n          color: \"black\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n          padding: \"50px\",\n        } }\n      >\n\n\n\n\n        <AddTechForm/>\n\n\n        {this.props.techItems.fetchingData?\n          <Loader className = \"section\" type=\"Rings\" color=\"deeppink\" height=\"260\" width=\"280\" />\n          :\n          <h3 className = \"techTitle\"> TechItems for Rent !</h3>\n        }\n\n        {this.props.techItems.techItems.map( (techItem, id ) => (\n          <div key = {id}\n               style =  {{\n                 border: \"1px solid red\",\n                 margin: \"2px\",\n                 width: \"30%\",\n               }}     >\n\n            <div className = \"buttons-container\">\n              {Number(localStorage.getItem('user_id')) === techItem.user_id\n                ? <button\n                  onClick =  { (e) => this.handleDelete(e, techItem.id)}\n                  className = \"ownerButton\"> Delete Item </button>\n\n                : techItem.availability\n                  ? <h3 className = \"borderFormat avail\"> Available </h3>\n                  : <h3 className = \"borderFormat rented\"> Rented </h3>\n              }\n\n\n              {Number(localStorage.getItem('user_id')) !== techItem.user_id\n                ? <button className = \"renterButton\" > Rent Item </button>\n                : null\n              }\n\n\n              {Number(localStorage.getItem('user_id')) === techItem.user_id\n                ? <button\n                  onClick = { (e) => this.handleUpdate(techItem.id, techItem)}\n                  className = \"ownerButton\"> Update Item </button>\n                : null\n              }\n            </div>\n\n\n\n            <div className = \"img-container\">\n              <img className = \"img_item\"\n                   src =  {techItem.picture} alt = \"alt-img\"\n              />\n            </div>\n\n\n            <h3 className = \"borderFormat\"> Owner: {techItem.user} </h3>\n            <h4 className = \"borderFormat\" >ID: {techItem.user_id}</h4>\n            <h4 className = \"borderFormat\"  > {techItem.name} </h4>\n            <h4 className = \"borderFormat\" > Category: {techItem.category} </h4>\n\n            <h4 className = \"borderFormat\"> Cost: ${techItem.cost} </h4>\n            <h4 className = \"borderFormat\"> Availability: {techItem.availability.toString()} </h4>\n            <h4 className = \"borderFormat\" style = {{fontSize: \"12px\"}}>  Description: {techItem.description} </h4>\n\n\n          </div>\n        ))}\n\n\n\n\n\n\n      </div>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = ({techItems, fetchingData, deletingTech, updatingTech}) => ({\n  techItems,\n  fetchingData,\n  deletingTech,\n  updatingTech,\n\n\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {getTech, deleteTech, updateTech}\n\n  )(TechItemlist)\n\n);"]},"metadata":{},"sourceType":"module"}