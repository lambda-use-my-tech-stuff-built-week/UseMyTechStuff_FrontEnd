{"ast":null,"code":"var _jsxFileName = \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'; // test\n// import * as serviceWorker from './serviceWorker';\n// import { logger } from \"./logger\";  // we don't use our custom built one here\n\nimport rootReducer from \"./reducers\";\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nconst composeEnhancers = typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose; // We pass thunk into applyMiddleware and this sets us up to be able to return\n// functions out of our action creators rather than returning actions\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk, logger));\nconst store = createStore(rootReducer, enhancer);\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n})), rootElement);","map":{"version":3,"sources":["/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/client/src/index.js"],"names":["React","ReactDOM","App","rootReducer","Provider","logger","thunk","applyMiddleware","createStore","compose","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CAEA;AAEA;AAEA;;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AAGA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,MAAMC,gBAAgB,GACpB,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,oCAArC,GACID,MAAM,CAACC,oCAAP,CAA4C,EAA5C,CADJ,GAEIH,OAHN,C,CAKA;AACA;;AACA,MAAMI,QAAQ,GAAGH,gBAAgB,CAACH,eAAe,CAACD,KAAD,EAAQD,MAAR,CAAhB,CAAjC;AAEA,MAAMS,KAAK,GAAGN,WAAW,CAACL,WAAD,EAAcU,QAAd,CAAzB;AAGA,MAAME,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAhB,QAAQ,CAACiB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,WAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n// test\n\n// import * as serviceWorker from './serviceWorker';\n\n// import { logger } from \"./logger\";  // we don't use our custom built one here\n\nimport rootReducer from \"./reducers\";\n\n\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport thunk from \"redux-thunk\";\n\n\nimport { applyMiddleware, createStore, compose } from \"redux\";\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\n// We pass thunk into applyMiddleware and this sets us up to be able to return\n// functions out of our action creators rather than returning actions\nconst enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n\nconst store = createStore(rootReducer, enhancer);\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement);\n"]},"metadata":{},"sourceType":"module"}