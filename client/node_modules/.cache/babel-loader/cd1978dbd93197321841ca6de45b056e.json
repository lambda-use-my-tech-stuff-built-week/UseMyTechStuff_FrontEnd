{"ast":null,"code":"import _objectSpread from \"/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN_START, LOGIN_RESOLVED, FETCH_DATA_START, FETCH_DATA_SUCCESS, ERROR } from \"../actions\";\nconst initialState = {\n  techItems: [],\n  // ADDED\n  user_id: '',\n  // ADDED\n  username: '',\n  isLoggingIn: false,\n  error: '',\n  fetchingData: false,\n  token: localStorage.getItem('token')\n};\nexport const itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_START:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true\n        });\n      }\n\n    case LOGIN_RESOLVED:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          name: action.payload.name,\n          // ADDED\n          user_id: action.payload.user_id,\n          // ADDED\n          username: action.payload.username // ADDED\n\n        });\n      }\n\n    case FETCH_DATA_START:\n      return _objectSpread({}, state, {\n        error: '',\n        fetchingData: true\n      });\n\n    case FETCH_DATA_SUCCESS:\n      return _objectSpread({}, state, {\n        error: '',\n        fetchingData: false,\n        isLoggingIn: false,\n        techItems: action.payload\n      });\n    //   case FETCH_DATA_FAILURE:\n\n    case ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/skutz/Documents/GitHub/UseMyTechStuff_FrontEnd/src/reducers/itemsReducer.js"],"names":["LOGIN_START","LOGIN_RESOLVED","FETCH_DATA_START","FETCH_DATA_SUCCESS","ERROR","initialState","techItems","user_id","username","isLoggingIn","error","fetchingData","token","localStorage","getItem","itemsReducer","state","action","type","name","payload"],"mappings":";AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,KALF,QAQO,YARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AACc;AACjCC,EAAAA,OAAO,EAAE,EAFU;AAEQ;AAC3BC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,WAAW,EAAE,KAJM;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,YAAY,EAAE,KANK;AAOnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAPY,CAArB;AAUA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,WAAL;AAAkB;AAChB,iCACKgB,KADL;AAEEP,UAAAA,WAAW,EAAE;AAFf;AAID;;AACD,SAAKR,cAAL;AAAqB;AACnB,iCACKe,KADL;AAEEP,UAAAA,WAAW,EAAE,KAFf;AAGEU,UAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeD,IAHvB;AAGwC;AACtCZ,UAAAA,OAAO,EAAEU,MAAM,CAACG,OAAP,CAAeb,OAJ1B;AAIuC;AACrCC,UAAAA,QAAQ,EAAES,MAAM,CAACG,OAAP,CAAeZ,QAL3B,CAK+C;;AAL/C;AAOD;;AAED,SAAKN,gBAAL;AACE,+BACKc,KADL;AAEEN,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKR,kBAAL;AACE,+BACKa,KADL;AAEEN,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,YAAY,EAAE,KAHhB;AAIEF,QAAAA,WAAW,EAAE,KAJf;AAKEH,QAAAA,SAAS,EAAEW,MAAM,CAACG;AALpB;AAOF;;AAGA,SAAKhB,KAAL;AACE,+BACKY,KADL;AAEEN,QAAAA,KAAK,EAAEO,MAAM,CAACG;AAFhB;;AAKF;AACE,aAAOJ,KAAP;AAzCJ;AA6CD,CA9CM","sourcesContent":["import {\n  LOGIN_START,\n  LOGIN_RESOLVED,\n  FETCH_DATA_START,\n  FETCH_DATA_SUCCESS,\n  ERROR\n\n\n} from \"../actions\";\n\nconst initialState = {\n  techItems: [],                   // ADDED\n  user_id: '',               // ADDED\n  username: '',\n  isLoggingIn: false,\n  error: '',\n  fetchingData: false,\n  token: localStorage.getItem('token'),\n};\n\nexport const itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_START: {\n      return {\n        ...state,\n        isLoggingIn: true\n      };\n    }\n    case LOGIN_RESOLVED: {\n      return {\n        ...state,\n        isLoggingIn: false,\n        name: action.payload.name,            // ADDED\n        user_id: action.payload.user_id,     // ADDED\n        username: action.payload.username            // ADDED\n      };\n    }\n\n    case FETCH_DATA_START:\n      return {\n        ...state,\n        error: '',\n        fetchingData: true,\n      };\n    case FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        error: '',\n        fetchingData: false,\n        isLoggingIn: false,\n        techItems: action.payload,\n      };\n    //   case FETCH_DATA_FAILURE:\n\n\n    case ERROR:\n      return {\n        ...state,\n        error: action.payload,\n\n      };\n    default:\n      return state;\n\n  }\n\n};\n"]},"metadata":{},"sourceType":"module"}